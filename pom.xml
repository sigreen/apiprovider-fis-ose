<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (C) Red Hat, Inc.
~ http://www.redhat.com
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>org.jboss.fuse.examples</groupId>
  <artifactId>apiprovider-fis-ose</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  
  <packaging>pom</packaging>
  
  <name>API Provider :: Parent</name>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    
    <camel.version>2.15.1.redhat-620133</camel.version>
    <activemq.version>5.11.0.redhat-620133</activemq.version>
    <cxf.version>3.0.4.redhat-620133</cxf.version>
    <derby-version>10.10.1.1</derby-version>
    <commons-pool-version>1.6</commons-pool-version>
    <commons-dbcp-version>1.4</commons-dbcp-version>   
	<!-- OSE Properties below -->
    <version.maven-bundle-plugin>2.3.7</version.maven-bundle-plugin>
    <!-- versions for use in mvn plugins as we cannot inherit them from a BOM -->
    <fuse.version>6.2.1.redhat-084</fuse.version>
    <fabric8.version>2.2.0.redhat-079</fabric8.version>
    <docker.maven.plugin.version>0.13.6</docker.maven.plugin.version>
    <karaf.plugin.version>4.0.2.redhat-621079</karaf.plugin.version>
    <derby.version>10.10.2.0</derby.version>
    <spring.features.version>3.0.4</spring.features.version>
    <spring.tx.feature.version>3.2.11.RELEASE_1</spring.tx.feature.version>
    <docker.from>jboss-fuse-6/fis-karaf-openshift:1.0</docker.from>
    <fabric8.dockerUser>fabric8/</fabric8.dockerUser>
    <docker.image>${fabric8.dockerUser}quickstart-karaf-camelrest:${project.version}</docker.image>
    <docker.assemblyDescriptor>${basedir}/src/main/fabric8/assembly.xml</docker.assemblyDescriptor>
    <docker.port.container.jolokia>8778</docker.port.container.jolokia>
    <docker.port.container.http>8181</docker.port.container.http>
    <fabric8.service.name>qs-camel-rest-sql</fabric8.service.name>
    <fabric8.service.port>9411</fabric8.service.port>
    <fabric8.service.containerPort>8181</fabric8.service.containerPort>
    <fabric8.label.component>${project.artifactId}</fabric8.label.component>
    <fabric8.label.container>karaf</fabric8.label.container>
    <fabric8.label.group>quickstarts</fabric8.label.group>
    <fabric8.iconRef>camel</fabric8.iconRef>
  </properties>

  <modules>
    <module>orgnamesearch</module>    
    <module>orgShared</module>    
    <module>ratingAPI</module>
    <module>financialStatementAPI</module>
    <module>getOrgInfo</module>
  </modules>

<!--   <repositories> -->
<!--     <repository> -->
<!--       <id>fusesource.releases</id> -->
<!--       <name>FuseSource Release Repository</name> -->
<!--       <url>https://repository.jboss.org/nexus/content/repositories/fs-releases</url> -->
<!--       <releases> -->
<!--         <enabled>true</enabled> -->
<!--       </releases> -->
<!--       <snapshots> -->
<!--         <enabled>false</enabled> -->
<!--       </snapshots> -->
<!--     </repository> -->
<!--   </repositories> -->
<!--   <pluginRepositories> -->
<!--     <pluginRepository> -->
<!--       <id>fusesource.releases</id> -->
<!--       <name>FuseSource Release Repository</name> -->
<!--       <url>https://repository.jboss.org/nexus/content/repositories/fs-releases</url> -->
<!--       <releases> -->
<!--         <enabled>true</enabled> -->
<!--       </releases> -->
<!--       <snapshots> -->
<!--         <enabled>false</enabled> -->
<!--       </snapshots> -->
<!--     </pluginRepository> -->
<!--   </pluginRepositories> -->

      <repositories>
        <repository>
          <id>fusesource.m2</id>
          <name>FuseSource Community Release Repository</name>
          <url>https://repo.fusesource.com/nexus/content/groups/public</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
        </repository>
        <repository>
          <id>fusesource.ea</id>
          <name>FuseSource Community Early Access Release Repository</name>
          <url>https://repo.fusesource.com/nexus/content/groups/ea</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
        </repository>
        <repository>
          <id>redhat.ga</id>
          <name>Red Hat General Availability Repository</name>
          <url>https://maven.repository.redhat.com/ga</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>fusesource.m2</id>
          <name>FuseSource Community Release Repository</name>
          <url>https://repo.fusesource.com/nexus/content/groups/public</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
        </pluginRepository>
        <pluginRepository>
          <id>fusesource.ea</id>
          <name>FuseSource Community Early Access Release Repository</name>
          <url>https://repo.fusesource.com/nexus/content/groups/ea</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
        </pluginRepository>
        <pluginRepository>
          <id>redhat.ga</id>
          <name>Red Hat General Availability Repository</name>
          <url>https://maven.repository.redhat.com/ga</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
        </pluginRepository>
      </pluginRepositories>

  <dependencyManagement>
    <dependencies>
      <!-- fabric8 bom must be before fabric8 bom -->
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-project-bom-with-platform-deps</artifactId>
        <version>${fabric8.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.fuse.bom</groupId>
        <artifactId>jboss-fuse-parent</artifactId>
        <version>${fuse.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-core</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-blueprint</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-spring</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-servlet</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-jackson</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-camel</artifactId>
        <version>${activemq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-client</artifactId>
        <version>${activemq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-pool</artifactId>
        <version>${activemq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-http4</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.jms</groupId>
        <artifactId>jms-api</artifactId>
        <version>1.1-rev-1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-cxf</artifactId>
        <version>${camel.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-transports-http-jetty</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.13</version>
      </dependency>
      	
      
	    <!-- Karaf microcontainer dependencies -->
	    <dependency>
	      <!-- scope is compile so all features (there is only one) are installed into startup.properties,
	      and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file -->
	      <groupId>org.jboss.fuse</groupId>
	      <artifactId>fuse-karaf-framework</artifactId>
	      <version>${fuse.version}</version>
	      <type>kar</type>
	      <!-- no need to download kar dependencies -->
	      <exclusions>
	        <exclusion>
	          <groupId>*</groupId>
	          <artifactId>*</artifactId>
	        </exclusion>
	      </exclusions>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.camel.karaf</groupId>
	      <artifactId>apache-camel</artifactId>
	      <classifier>features</classifier>
	      <type>xml</type>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.karaf.features</groupId>
	      <artifactId>spring</artifactId>
	      <version>${spring.features.version}</version>
	      <classifier>features</classifier>
	      <type>xml</type>
	    </dependency>
      
    </dependencies>
  </dependencyManagement>
  
  <build>
	<finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
      <!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation processors -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
	      <plugin>
	        <groupId>org.apache.felix</groupId>
	        <artifactId>maven-bundle-plugin</artifactId>
	        <version>${version.maven-bundle-plugin}</version>
	        <extensions>true</extensions>
	        <configuration>
	          <instructions>
	            <!-- dynamic import for the Derby JDBC driver -->
	            <DynamicImport-Package>*</DynamicImport-Package>
	          </instructions>
	        </configuration>
	      </plugin>
	      <plugin>
	        <groupId>io.fabric8</groupId>
	        <artifactId>fabric8-maven-plugin</artifactId>
	        <version>${fabric8.version}</version>
	        <executions>
	          <execution>
	            <id>json</id>
	            <phase>generate-resources</phase>
	            <goals>
	              <goal>json</goal>
	            </goals>
	          </execution>
	          <execution>
	            <id>attach</id>
	            <phase>package</phase>
	            <goals>
	              <goal>attach</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>
      <!-- plugin goals have to be executed in order -->
      <!-- 1. install the bundle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
        <executions>
          <execution>
            <id>install-bundle</id>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- 2. create karaf assembly -->
      <!-- karaf-maven-plugin creates custom microservice distribution -->
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
        <version>${karaf.plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>karaf-assembly</id>
            <goals>
              <goal>assembly</goal>
            </goals>
            <phase>install</phase>
          </execution>
          <execution>
            <id>karaf-archive</id>
            <goals>
              <goal>archive</goal>
            </goals>
            <phase>install</phase>
          </execution>
        </executions>
        <configuration>
          <!-- we are using karaf 2.4.x -->
          <karafVersion>v24</karafVersion>
          <useReferenceUrls>true</useReferenceUrls>
          <!-- do not include build output directory -->
          <includeBuildOutputDirectory>false</includeBuildOutputDirectory>
          <!-- no startupFeatures -->
          <startupFeatures>
            <feature>karaf-framework</feature>
            <feature>shell</feature>
            <feature>jaas</feature>
            <feature>aries-blueprint</feature>
            <feature>camel-blueprint</feature>
            <feature>camel-servlet</feature>
            <feature>camel-jms</feature>
            <feature>camel-sql</feature>
            <feature>camel-jackson</feature>
            <feature>activemq-camel</feature>
            <feature>camel-http4</feature>
            <feature>camel-spring</feature>
            <feature>camel-cxf</feature>
			<feature>camel-core</feature>
          </startupFeatures>
          <startupBundles>
		    <bundle>mvn:org.apache.derby/derby/${derby-version}</bundle>
		    <bundle>mvn:commons-pool/commons-pool/${commons-pool-version}</bundle>
		    <bundle>mvn:commons-dbcp/commons-dbcp/${commons-dbcp-version}</bundle>
		    <bundle>mvn:${project.groupId}/orgShared/${project.version}</bundle>
		    <bundle>mvn:${project.groupId}/orgnamesearch/${project.version}</bundle>
		    <bundle>mvn:${project.groupId}/ratingAPI/${project.version}</bundle>
		    <bundle>mvn:${project.groupId}/financialStatementAPI/${project.version}</bundle>
		    <bundle>mvn:${project.groupId}/orgShared/${project.version}</bundle>
		    <bundle>mvn:${project.groupId}/getOrgInfo/${project.version}</bundle>
            <bundle>mvn:${project.groupId}/${project.artifactId}/${project.version}</bundle>
          </startupBundles>
        </configuration>
      </plugin>

      <!-- 3. create docker image -->
      <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <configuration>
          <images>
            <image>
              <name>${docker.image}</name>
              <build>
                <from>${docker.from}</from>
                <assembly>
                  <basedir>/deployments</basedir>
                  <user>jboss:jboss:jboss</user>
                  <inline xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2" xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
                    <id>${project.artifactId}</id>
                    <files>
                      <!-- copy karaf archive -->
                      <file>
                        <source>${project.build.directory}/${project.artifactId}-${project.version}.tar.gz</source>
                        <outputDirectory>/</outputDirectory>
                      </file>
                    </files>
                  </inline>
                </assembly>
                <cmd>
                  <shell>/deployments/deploy-and-run.sh</shell>
                </cmd>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
        <plugin>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-maven-plugin</artifactId>
          <version>${camel.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-codegen-plugin</artifactId>
          <version>${cxf.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
    <!--
  Default sample commands:

  mvn -Pf8-build         ... build Docker images and create OpenShift deployment configs
  mvn -Pf8-deploy        ... f8-build + push to Docker registry + applying deployment config to OpenShift
  mvn -Pf8-local-deploy ... deployment for a single node setup without pushing to a registry

  For individual goal usage please consult the fabric8 documentation
  -->
  <profiles>
    <profile>
      <id>f8-build</id>
      <build>
        <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>f8-deploy</id>
      <properties>
        <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
        <fabric8.recreate>true</fabric8.recreate>
      </properties>
      <build>
        <defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
      </build>
    </profile>
    <profile>
      <id>f8-local-deploy</id>
      <properties>
        <fabric8.recreate>true</fabric8.recreate>
      </properties>
      <build>
        <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
      </build>
    </profile>
  </profiles>

</project>
